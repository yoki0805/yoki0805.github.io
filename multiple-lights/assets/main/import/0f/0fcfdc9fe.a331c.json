[1,["ecpdLyjvZBwrvm+cedCcQy","55tMIRbbdH+oNKzHLLoAQR","24BtAC5I9EwrXqVCLoGk/u","f7c5RTrnlDV64vi6rCfkjf","ecAutAqGdCDrGz6+N/XZkK","04BLCcZZtF6JHirLiSBE9J","12OsyvW11OKoFAXZrUssyx"],["node","_spriteFrame","_textureSetter","_parent","_effectAsset","image","scene"],[["cc.Node",["_name","_opacity","_id","_components","_parent","_children","_contentSize","_trs"],0,9,1,2,5,7],["cc.Sprite",["_sizeMode","_isTrimmedMode","_dstBlendFactor","node","_materials","_spriteFrame"],0,1,3,6],"cc.SpriteFrame","cc.Texture2D",["cc.Material",["_name","_techniqueData"],1],["cc.SceneAsset",["_name","asyncLoadAssets"],1],["cc.Node",["_name","_parent","_components","_color","_trs"],2,1,2,5,7],["cc.Canvas",["_fitWidth","node","_designResolution"],2,1,5],["cc.Widget",["_alignFlags","node"],2,1],["8aec1q9onBMmL7x+O5RXXwx",["node","lightsNode","image"],3,1,1,1],["cc.Scene",["_name","_children","_anchorPoint","_trs"],2,2,5,7],["cc.Camera",["_clearFlags","_depth","node"],1,1],["3afc07+gt5KxYlEEAOKaqjo",["node","rootNode"],3,1,1],["cc.Label",["_string","_fontSize","_lineHeight","_styleFlags","_N$horizontalAlign","_N$verticalAlign","node","_materials"],-3,1,3],["cc.EffectAsset",["_name","shaders","techniques"],0]],[[0,0,4,3,6,7,2],[1,2,3,4,5,2],[4,0,1,3],[5,0,1,3],[0,0,1,5,3],[0,0,2,5,3,6,7,3],[0,0,4,5,3,2],[0,0,4,3,7,2],[0,0,4,3,6,2],[0,0,4,3,2],[6,0,1,2,3,4,2],[7,0,1,2,2],[8,0,1,2],[9,0,1,2,1],[10,0,1,2,3,2],[11,0,1,2,3],[1,3,4,5,1],[1,0,1,3,4,3],[12,0,1,1],[13,0,1,2,3,4,5,6,7,7],[14,0,1,2,4]],[[[{"name":"Background","rect":[0,0,1500,711],"offset":[0,0],"originalSize":[1500,711],"capInsets":[0,0,0,0]}],[2],0,[0],[2],[2]],[[[2,"multiple-lights",{"0":{"defines":{"USE_TEXTURE":true}}}]],0,0,[0],[4],[3]],[["1,9729,9729,33071,33071,0,0,1",-1],[3],0,[],[],[]],[[{"name":"LightBlur","rect":[0,0,186,187],"offset":[0,0],"originalSize":[186,187],"capInsets":[0,0,0,0]}],[2],0,[0],[2],[4]],[[[3,"Game",null],[4,"Lights",0,[-1,-2,-3,-4,-5,-6,-7,-8]],[5,"Canvas","a5esZu+45LA5mBpvttspPD",[-11,-12,-13,-14,-15],[[11,true,-9,[5,1136,640]],[12,45,-10]],[5,1136,640],[568,320,0,0,0,0,1,1,1,1]],[6,"MultipleLights",2,[1,-18],[[13,-17,1,-16]]],[14,"New Node",[2],[0,0,0],[0,0,0,0,0,0,1,1,1,1]],[7,"Main Camera",2,[[15,7,-1,-19]],[0,0,293.3552960718301,0,0,0,1,1,1,1]],[8,"BG",2,[[16,-20,[0],1]],[5,1500,711]],[9,"Bouncing",2,[[18,-21,1]]],[10,"Image",3,[-22],[4,4278190080],[0,0,0,0,0,0,1,2,-2,1]],[17,2,false,8,[2]],[0,"Light_1",1,[[1,1,-23,[3],4]],[5,186,187],[-257.058,155.641,0,0,0,0,1,3,3,1]],[0,"Light_2",1,[[1,1,-24,[5],6]],[5,186,187],[297.047,150.089,0,0,0,0,1,3,3,1]],[0,"Light_3",1,[[1,1,-25,[7],8]],[5,186,187],[121.875,-156.98,0,0,0,0,1,3,3,1]],[0,"Light_4",1,[[1,1,-26,[9],10]],[5,186,187],[-448.269,-189.242,0,0,0,0,1,4,4,1]],[0,"Light_5",1,[[1,1,-27,[11],12]],[5,186,187],[-211.949,-61.993,0,0,0,0,1,4,4,1]],[0,"Light_6",1,[[1,1,-28,[13],14]],[5,186,187],[259.858,89.304,0,0,0,0,1,2,2,1]],[0,"Light_7",1,[[1,1,-29,[15],16]],[5,186,187],[239.95,-147.595,0,0,0,0,1,2,2,1]],[0,"Light_8",1,[[1,1,-30,[17],18]],[5,186,187],[-14.865,268.471,0,0,0,0,1,5,5,1]],[0,"New Label",2,[[19,"8 Lights in One Draw Call.",60,60,1,1,1,-31,[19]]],[5,740.13,75.6],[0,-270,0,0,0,0,1,0.7,0.7,1]]],0,[0,-1,10,0,-2,11,0,-3,12,0,-4,13,0,-5,14,0,-6,15,0,-7,16,0,-8,17,0,0,2,0,0,2,0,-1,5,0,-2,6,0,-3,7,0,-4,3,0,-5,18,0,5,9,0,0,3,0,-2,8,0,0,5,0,0,6,0,0,7,0,-1,9,0,0,10,0,0,11,0,0,12,0,0,13,0,0,14,0,0,15,0,0,16,0,0,17,0,0,18,0,6,4,1,3,3,2,3,4,31],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,1,-1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1],[0,5,6,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0]],[["0,9729,9729,33071,33071,0,0,1",-1],[3],0,[],[],[]],[[[20,"multiple-lights",[{"hash":222691723,"record":null,"name":"multiple-lights|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  o.a = (1. - o.r) * v_color.a;\n  o.rgb = v_color.rgb;\n  ALPHA_TEST(o);\n  gl_FragColor = o;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture2D(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  o.a = (1. - o.r) * v_color.a;\n  o.rgb = v_color.rgb;\n  ALPHA_TEST(o);\n  gl_FragColor = o;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"CC_USE_ALPHA_ATLAS_texture","type":"boolean","defines":["USE_TEXTURE"]},{"name":"INPUT_IS_GAMMA","type":"boolean","defines":["USE_TEXTURE"]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"multiple-lights|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]}}}]}]]],0,0,[],[],[]]]]